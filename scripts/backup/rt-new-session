#!/usr/bin/perl

use 5.38.0;
use open qw( :std :encoding(UTF-8) );
use Env  qw(TERMINAL);
use Cwd  qw(cwd);

die "please provide a session name at least" if @ARGV < 1;
my $session = shift @ARGV;
my $cwd     = shift @ARGV // cwd;

my $TERMINAL = $TERMINAL // "kitty";

sub get_active_client {
  my @clients_output =
    `tmux lsc -F "#{client_activity}:#{client_name}"`;
  my $ret = $? >> 8;
  if ( $ret != 0 or !@clients_output ) {
    return '';
  }

# get the line with newest timestamp (inverting cmp for desc order)
  my $head = ( sort { 0 - ( $a cmp $b ) } @clients_output )[0];

  # split the line and get second field (client_name), remove any
  # whitespaces around the field
  my $last_focused_client = ( split /:/, $head )[1];
  chomp $last_focused_client;
  return $last_focused_client;
}

`tmux has-session -t "$session"`;
my $ret = $? >> 8;

# create session and running init script
# if the session does not exist already
if ( $ret != 0 ) {
  `tmux new-session -d -c "$cwd" -s "$session"`;

  # if an init script exist for this session
  # run it
  my $global_init = "$ENV{'HOME'}/.tmux/init_tmux/$session";
  my $local_init  = "$cwd/.init_tmux";

  say "global: $global_init";
  say "local: $local_init";

  if ( -x $local_init ) {
    `$local_init "$session" "$cwd"`;    # run init script
  }
  elsif ( -x $global_init ) {
    `$global_init "$session" "$cwd"`;
  }
}

# Activating appropriate client
if ( my $client = get_active_client ) {
  `tmux switch-client -c $client -t "$session" &`;
}
else {
  # no clients present, then just attach to the server
  # using the default terminal
  `$TERMINAL sh -c 'tmux attach-session -t "$session"' &`;
}

